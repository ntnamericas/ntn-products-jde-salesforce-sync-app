<?xml version="1.0" encoding="UTF-8"?>

<mule xmlns:email="http://www.mulesoft.org/schema/mule/email"
	xmlns:batch="http://www.mulesoft.org/schema/mule/batch"
	xmlns:salesforce-composite="http://www.mulesoft.org/schema/mule/salesforce-composite"
	xmlns:tracking="http://www.mulesoft.org/schema/mule/ee/tracking" xmlns:salesforce="http://www.mulesoft.org/schema/mule/salesforce"
	xmlns:db="http://www.mulesoft.org/schema/mule/db"
	xmlns:os="http://www.mulesoft.org/schema/mule/os" xmlns:http="http://www.mulesoft.org/schema/mule/http" xmlns:file="http://www.mulesoft.org/schema/mule/file" xmlns:ee="http://www.mulesoft.org/schema/mule/ee/core" xmlns="http://www.mulesoft.org/schema/mule/core" xmlns:doc="http://www.mulesoft.org/schema/mule/documentation" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="
http://www.mulesoft.org/schema/mule/http http://www.mulesoft.org/schema/mule/http/current/mule-http.xsd 
http://www.mulesoft.org/schema/mule/file http://www.mulesoft.org/schema/mule/file/current/mule-file.xsd 
http://www.mulesoft.org/schema/mule/ee/core http://www.mulesoft.org/schema/mule/ee/core/current/mule-ee.xsd http://www.mulesoft.org/schema/mule/core http://www.mulesoft.org/schema/mule/core/current/mule.xsd
http://www.mulesoft.org/schema/mule/os http://www.mulesoft.org/schema/mule/os/current/mule-os.xsd
http://www.mulesoft.org/schema/mule/db http://www.mulesoft.org/schema/mule/db/current/mule-db.xsd
http://www.mulesoft.org/schema/mule/salesforce http://www.mulesoft.org/schema/mule/salesforce/current/mule-salesforce.xsd
http://www.mulesoft.org/schema/mule/ee/tracking http://www.mulesoft.org/schema/mule/ee/tracking/current/mule-tracking-ee.xsd
http://www.mulesoft.org/schema/mule/salesforce-composite http://www.mulesoft.org/schema/mule/salesforce-composite/current/mule-salesforce-composite.xsd
http://www.mulesoft.org/schema/mule/batch http://www.mulesoft.org/schema/mule/batch/current/mule-batch.xsd
http://www.mulesoft.org/schema/mule/email http://www.mulesoft.org/schema/mule/email/current/mule-email.xsd">
	<flow name="prodcuts-schedule-flow"
		doc:id="6c64299d-8db3-4c46-a5d2-1def002fce65" tracking:enable-default-events="true" initialState="${products.initialState}">
		<scheduler doc:name="prodcuts-scheduler" doc:id="0c38b9fb-7af5-47a4-a2b7-866e400c5559" >
			<scheduling-strategy >
				<fixed-frequency frequency="${scheduler.frequency}" timeUnit="DAYS" startDelay="${scheduler.startDelay}"/>
			</scheduling-strategy>
		</scheduler>
		<ee:transform doc:name="jobRunTime"
			doc:id="c7bf67ba-eeff-4bcb-a3ed-11ca4464b100">
			<ee:message />
			<ee:variables>
				<ee:set-variable resource="dwl/vars-productsJobRun.dwl" variableName="productsJobRun" />
			

</ee:variables>
		</ee:transform>
		<logger level="INFO" doc:name="jobRun logger" doc:id="5984e226-a277-496d-8706-1396756d7fbd" message="#[vars.productsJobRun]" category="${log.category}"/>
		<os:retrieve doc:name="retrievePreviousJobRun"
			doc:id="35c3b04f-5293-4fbe-bc99-a0fdecbc6fbf" key="previousProductsJobRun"
			target="previousProductsJobRun" objectStore="Object_store_Previous_Products_Job_Run">
			<os:default-value><![CDATA[#[vars.productsJobRun]]]></os:default-value>
		</os:retrieve>
		<logger level="INFO" doc:name="Logger" doc:id="06bba3fc-e5b9-49a3-8368-11bdf8082eaa" message='#[%dw 2.0&#10;output application/java&#10;---&#10;"&#10;LastjobRunDetails : " ++ vars.previousProductsJobRun.^raw]'/>
		<logger level="INFO" doc:name="Logger" doc:id="730807af-856e-4f6a-9e87-1a050b20b8ee" message='#["Calling products-sub-flow"]' category="${log.category}"/>
		<flow-ref doc:name="jde-products-sub-flow"
			doc:id="4fede292-ec95-4e79-be75-ded63ded2992" name="products-sub-flow" />
		<os:store doc:name="Store current job run details"
			doc:id="94b3f559-1d39-4249-955c-d4e8e8951844" key="previousProductsJobRun" objectStore="Object_store_Previous_Products_Job_Run">
			<os:value><![CDATA[#[vars.productsJobRun]]]></os:value>
		</os:store>
		<error-handler ref="global-error-handler" />
	</flow>
	<sub-flow name="products-sub-flow" doc:id="1decaf7b-f651-4c2d-bc2a-2c74fb85198c" >
		<ee:transform doc:name="Transform Message" doc:id="178730ec-771e-4fb6-8df9-14aeb96b605a">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output text/plain
---
readUrl("classpath://queryScript/sqlScript-products-consolidated-$(p('mule.env')).dwl","text/plain")]]></ee:set-payload>
			</ee:message>
			<ee:variables>
				<ee:set-variable variableName="excelData"><![CDATA[%dw 2.0
output application/json
---
readUrl("classpath://product-family-data.xlsx","application/xlsx", {header: true})]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<ee:dynamic-evaluate doc:name="Dynamic Evaluate" doc:id="d6c023ec-c961-4824-9769-76390fcbb3e4" expression="#[payload]" />
		<db:select doc:name="Get Product Details" doc:id="8ff6cc13-6128-4813-a538-8740e4bce437" config-ref="Oracle_JDE_Database_Config">
			<reconnect-forever />
			<db:sql><![CDATA[#[payload]]]></db:sql>
		</db:select>
		<ee:transform doc:name="var-productMaster" doc:id="af37a10d-5942-4b41-ac76-4f4e85f7060d" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="productMaster" ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="f2c4f333-1835-4427-8f7b-3aa0e7952aae" message='#["Product Result Sets Received From JDE: " ++ sizeOf(payload)]'/>
		<ee:transform doc:name="map metadata" doc:id="76a67c59-2012-4683-bdbc-d90a3d2877ca">
				<ee:message>
				</ee:message>
				<ee:variables>
				<ee:set-variable resource="dwl/metadata.dwl" variableName="metadata" />
				</ee:variables>
			</ee:transform>
		<flow-ref doc:name="products-mapping-subflow" doc:id="4eb4adc5-6e98-4f2c-b2ba-6d6d5d856783" name="products-mapping-subflow"/>
		<ee:transform doc:name="Transform Message" doc:id="62e82583-d8b0-44da-bc20-a34f81653838" >
			<ee:message >
			</ee:message>
			<ee:variables >
				<ee:set-variable variableName="metadata" ><![CDATA[%dw 2.0
output application/json
---
{"drawExternalID": (vars.metadata map ((item, index) -> item.drawExternalIDLanded)) distinctBy $,
"srtxExternalID": (vars.metadata map ((item, index) -> item.srtxExternalIDLanded)) distinctBy $
}]]></ee:set-variable>
			</ee:variables>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="7f09172a-5630-4aa0-b060-460ddeb49711" message="Calling landed-min-max-subflow"/>
		<flow-ref doc:name="Flow Reference" doc:id="cdcbea4f-c4e0-443d-8914-07b2040253be" name="landed-min-max-choice-subflow"/>
	
</sub-flow>
	<sub-flow name="products-mapping-subflow" doc:id="863e9334-dadb-4dc0-a1a2-f14c18dc3d40" >
		<ee:transform doc:name="Transform Message" doc:id="0c587aab-5aca-493d-a5e7-440a83623a64">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
vars.metadata]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<choice doc:name="Choice" doc:id="80c4c3a9-c855-4c98-a05f-bd2d4511a9c3" >
			<when expression="#[payload !=[]]" >
				<scatter-gather doc:name="Scatter-Gather" doc:id="ca87f6bb-121f-4300-a217-590d033bd50e" maxConcurrency="1" >
					<route >
						<ee:transform doc:name="drawExternalIDLanded" doc:id="0f3a8652-c510-4bd8-a101-bc2e4e6a934a" >
							<ee:message />
							<ee:variables >
								<ee:set-variable variableName="exId" ><![CDATA[%dw 2.0
output application/json
---
"drawExternalIDLanded"]]></ee:set-variable>
							</ee:variables>
						</ee:transform>
						<flow-ref doc:name="Flow Reference" doc:id="42e134c6-0eca-453b-9c91-04f819656e26" name="productsFlow" />
					</route>
					<route >
						<ee:transform doc:name='srtxExternalIDLanded"' doc:id="9f803598-bb6b-4273-a95d-cf0ce2c7de2a" >
							<ee:message />
							<ee:variables >
								<ee:set-variable variableName="exId" ><![CDATA[%dw 2.0
output application/json
---
"srtxExternalIDLanded"]]></ee:set-variable>
							</ee:variables>
						</ee:transform>
						<flow-ref doc:name="Flow Reference" doc:id="643f60c1-f585-4ac8-b41d-1b38b8bffa82" name="productsFlow" />
					</route>
				</scatter-gather>
			</when>
			<otherwise >
				<logger level="INFO" doc:name="Inavlid Inputs to process" doc:id="93b3ab20-c7ca-425f-9b76-451fe22086e5" message="No Valid Inputs to process" />
			</otherwise>
		</choice>
	</sub-flow>
	<flow name="productsFlow" doc:id="206df059-5e14-42f2-b69f-9d2966de8079">
		<batch:job jobName="productsBatch_Job" doc:id="9daeb12f-d6a5-4dd3-9250-2a0b4cea3549" maxFailedRecords="-1">
			<batch:process-records>
				<batch:step name="Batch_Step" doc:id="1d9db3de-471f-466f-8549-7982278ca725">
					<batch:aggregator doc:name="Batch Aggregator" doc:id="4cbb27f0-2198-4ed4-bc33-19fb815eb493" size="10">
						<ee:transform doc:name="Transform Message" doc:id="12ab5be5-7933-467b-8dc9-725eac9fe550">
							<ee:message>
								<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload map read( $, 'application/json')]]></ee:set-payload>
							</ee:message>
						</ee:transform>
						<ee:transform doc:name="Transform Message1" doc:id="dd5a4360-c3b6-4d5c-9d39-f58220c44d50">
							<ee:message />
							<ee:variables>
								<ee:set-variable variableName="createdata"><![CDATA[%dw 2.0
output application/json
---
(payload filter ((item, index) -> item.id == null))]]></ee:set-variable>
								<ee:set-variable variableName="updatedata"><![CDATA[%dw 2.0
output application/json
---
payload filter ((item, index) -> item.id != null)]]></ee:set-variable>
							</ee:variables>
						</ee:transform>
						<scatter-gather doc:name="Scatter-Gather-data" doc:id="25e3efa5-7917-4bed-83b7-ed286fbfac8f">
							<route>
								<salesforce:update type="${sf.object}" doc:name="Update" doc:id="d0f3613f-c465-4ad0-bf9b-630dc2476f59" config-ref="Salesforce_Config">
									<salesforce:records><![CDATA[#[vars.updatedata]]]></salesforce:records>
								</salesforce:update>
								<ee:transform doc:name="Transform Message" doc:id="a21788b2-694a-4079-8e97-5cab0fa52787">
									<ee:message>
										<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
									</ee:message>
								</ee:transform>
								<logger level="INFO" doc:name="Logger" doc:id="89c7e2ae-b1ab-4762-a5c4-cda8df6e7c9b" message="#[%dw 2.0&#10;output application/json&#10;---&#10;if (payload.successful == true) {Successful : payload.successful}&#10;else (payload.items map() -&gt; {&#10;	failedId: $.id,&#10;	message: $.message&#10;	&#10;})]"/>
							</route>
							<route>
								<salesforce:create type="${sf.object}" doc:name="Create" doc:id="6138d1bb-7c3e-41d9-82dc-c4aeb18aa502" config-ref="Salesforce_Config">
									<salesforce:records><![CDATA[#[vars.createdata]]]></salesforce:records>
								</salesforce:create>
								<logger level="INFO" doc:name="Logger" doc:id="e0166bee-40ba-4df5-bf99-7371e8915009" message="#[%dw 2.0&#10;output application/json&#10;---&#10;if (payload.successful == true) {Successful : payload.successful}&#10;else (payload.items map() -&gt; {&#10;	failedId: $.id,&#10;	message: $.message&#10;	&#10;})]"/>
								<ee:transform doc:name="Transform Message" doc:id="b741970e-2311-4ba2-b721-a8573101d2d3">
									<ee:message>
									</ee:message>
									<ee:variables>
										<ee:set-variable variableName="product2id"><![CDATA[%dw 2.0
output application/json
---
payload.items map ( {Product2Id: $.id})]]></ee:set-variable>
									</ee:variables>
								</ee:transform>
								<flow-ref doc:name="get-pricebook-id" doc:id="7e45eda9-7be5-4a54-a4ec-b56fef9cc165" name="get-pricebook-id" />
								<ee:transform doc:name="Transform Message" doc:id="0bb71b40-27e4-4cdc-8719-9bd04c5f09d6">
									<ee:message>
										<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
vars.createData map (item, index) -> (
{
  	IsActive: item.IsActive,
  	//ProductCode : item.ProductCode,
  	CurrencyIsoCode : item.CurrencyIsoCode,
  	//Name : item.Name,
  	Product2Id : vars.product2id.Product2Id[index],
  	PriceBookId: payload,
  	UnitPrice : 0 
})]]></ee:set-payload>
									</ee:message>
								</ee:transform>
								<async doc:name="Async" doc:id="0a2c76bb-6816-4341-9abd-4581cb7beb70" >
									<http:request method="POST" doc:name="Request" doc:id="e22f8909-e759-46f8-9f2c-5f407fcdb4f8" config-ref="HTTP_Request_configuration" path="${pricebooks.uri}" />
									<logger level="INFO" doc:name="Logger" doc:id="1f1513d4-33a8-45be-b254-9ab5942d3bb7" message="Request to Pricebooks API Completed."/>
								</async>
							</route>
						</scatter-gather>
					</batch:aggregator>
					<ee:transform doc:name="Transform Message" doc:id="77d59879-687f-453d-8227-497c3f4585c2">
						<ee:message>
							<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
if(vars.exId == "drawExternalIDLanded")
    {"a":payload - "srtxExternalIDLanded" - "drawExternalIDLanded",
    	"External_ID__c": payload."drawExternalIDLanded"
    }
 else
    {"a":payload - "srtxExternalIDLanded" - "drawExternalIDLanded",
    	"External_ID__c":payload."srtxExternalIDLanded"
    }]]></ee:set-payload>
						</ee:message>
						<ee:variables>
						</ee:variables>
					</ee:transform>
					<salesforce:query doc:name="Check Base External Id in Salesforce" doc:id="7bdad15c-8a8e-4d36-8312-11c4373a15c8" config-ref="Salesforce_Config" target="SFExtId">
						<reconnect-forever />
							<salesforce:salesforce-query><![CDATA[select Id from Product2 where External_ID__c = :externalId__c and source__c='NBCC']]></salesforce:salesforce-query>
						<salesforce:parameters><![CDATA[#[output application/java
---
{
	externalId__c : "'" ++ payload."External_ID__c" ++ "'"
}]]]></salesforce:parameters>
					</salesforce:query>
					<logger level="INFO" doc:name="Logger" doc:id="88d13608-ae81-4d15-85a9-77c0ebe843aa" message="#[payload]"/>
					<ee:transform doc:name="Transform Message1" doc:id="72b2361c-6e60-442d-ac32-e6cd34884f89">
						<ee:message>
							<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
((payload.a - "Part_Number_Type__c") ++{"Part_Number_Type__c": if (payload."External_ID__c" contains "-NBCC") "Industry" else "Base"} 
	++ {"id":vars.SFExtId[0].Id, "External_ID__c": payload.External_ID__c}
)]]></ee:set-payload>
						</ee:message>
					</ee:transform>
				
</batch:step>
				<batch:step name="Handle-Batch-Errors" doc:id="334d535b-914e-4cea-8c1e-8bcdf84f4b64" acceptPolicy="ONLY_FAILURES">
					<ee:transform doc:name="Transform Message" doc:id="ede310ba-c83a-43c4-a64f-46d92cee6d71">
						<ee:message>
							<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
						</ee:message>
					</ee:transform>
					<batch:aggregator doc:name="Batch Aggregator" doc:id="a315d816-ef91-4cc3-9cd9-097043bb1708" size="100">
						<ee:transform doc:name="Transform Message" doc:id="d2120abe-8f4b-46c4-b6e5-f1d828db5e67">
							<ee:message>
								<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload map read( $, 'application/json')]]></ee:set-payload>
							</ee:message>
						</ee:transform>
						<ee:transform doc:name="Transform Message" doc:id="6e3bc196-ec4d-458d-bb76-54cc9e242a09">
							<ee:message>
								<ee:set-payload resource="dwl/writeToEmailPayload.dwl" />
							</ee:message>
						</ee:transform>
						<logger level="INFO" doc:name="Logger" doc:id="2a825cfe-fc2a-42b6-8b1b-175ee45124c7" message="#[payload]" />
						<email:send doc:name="Send" doc:id="daefc74c-086d-41f6-994f-7cf915878e67" config-ref="NTN-SMTP-Details" subject="#[&quot;*** E-mail Notification: &quot; ++ p('app.env') ++ &quot;  *** Batch Process Error Handling in  &quot; ++ p('app.name')]" toAddresses="#[p('smtp.to') splitBy &quot;,&quot;]" fromAddress="${secure::smtp.user}">
							<email:body contentType="text/html" encoding="UTF-8">
								<email:content><![CDATA[#[%dw 2.0
output application/xml
skipNullOn="everywhere"

---
{
    "html":{
        "body":{
            "div" @(class:"total"):{
                "div" @(class:"header"):{
                    "h2":"Alert from Mulesoft"
                },
                "div" @(class:"content"):{
                    "p": "Hi,",
                    "p": "Greetings!!!",
					"p": "Error while processing, please take corrective action."
                },

                "div":{
                    "table" @(width:'40%', border:'1', cellspacing:'0'): {
							"tr":{
                                "th": "InterfaceName",
                                "td": p('app.name')
                            },
                          "tr":{
                                "th": "Error Type",
                                "td":  "Batch Processing issue in the main Products Flow"
                            },
                          "tr":{
                                "th": "Failed Payload",
                                "td": payload
                            }                        
				
                        }
                }
            }
        }
    }
}]]]></email:content>
							</email:body>
							<email:attachments><![CDATA[#[{"Products_Failures.csv": payload}]]]></email:attachments>
						</email:send>
						<logger level="INFO" doc:name="Logger" doc:id="65c101cd-6827-404c-9865-b6b51af2f706" message="#[payload]" />
					</batch:aggregator>
				</batch:step>
			</batch:process-records>
			<batch:on-complete >
				<ee:transform doc:name="Transform Message" doc:id="a258f6ca-5848-4d0d-9aab-433db1bcd09e" >
					<ee:message >
						<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
					</ee:message>
				</ee:transform>
				<logger level="INFO" doc:name="Logger" doc:id="ecea1a8c-bb37-4a25-b1f0-12f6a8f9eb62" message="#['\n'] Final Payload is ==&gt;  #[payload]"/>
			</batch:on-complete>
		</batch:job>
	</flow>
	<sub-flow name="landed-min-max-choice-subflow" doc:id="079492f5-9e09-4206-ab6d-36c1a7904fa8">
		<choice doc:name="Choice" doc:id="813c08b9-c84d-4ca6-8912-5407ea3b461d">
			<when expression="#[vars.metadata !=[]]">
				<scatter-gather doc:name="Scatter-Gather" doc:id="89eb7dd9-36ee-4276-b4b0-9d2c6de0bfff" maxConcurrency="1">
					<route>
						<batch:job jobName="base-part-batch-job" doc:id="676b9064-96d0-44ff-8986-7698ff5a1c27" maxFailedRecords="-1">
					<batch:process-records>
						<batch:step name="base-part-batch-step" doc:id="26ef4117-7dca-4ac2-88bc-88473b2900d2" acceptExpression='#[vars.metadata.drawExternalID != null  and vars.metadata.drawExternalID !="" and vars.metadata.drawExternalID != [] and vars.metadata.drawExternalID != [""]  ]'>
							<ee:transform doc:name="Transform Message" doc:id="768e4397-806b-4020-89a3-767693083641">
					<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output text/plain
---
readUrl("classpath://queryScript/sqlScript-landed-imdraw-$(p('mule.env')).dwl","text/plain")]]></ee:set-payload>

					</ee:message>
					<ee:variables>
					
</ee:variables>
				</ee:transform>
							<ee:dynamic-evaluate doc:name="Dynamic Evaluate" doc:id="fefc2dd8-75e4-4f24-993f-3208b7bd3779" expression="#[payload]" />
							<db:select doc:name="Select" doc:id="945f3429-4252-439e-a851-6b94ab1c74c3" config-ref="Oracle_JDE_Database_Config">
			<reconnect-forever />
										<db:sql><![CDATA[#[payload]]]></db:sql>

				</db:select>
							<ee:transform doc:name="Transform Message" doc:id="83875d5e-04c2-44b9-916b-bfbf665edf83">
			<ee:message>
											<ee:set-payload ><![CDATA[%dw 2.0
output application/json
---
(vars.metadata.drawExternalID map ((item, index) ->{       
	"External_ID__c":item,
    "Landed_Cost_Min__c": payload[0].LANDED_COST_MIN_DRAW default 0,
    "Landed_Cost_Max__c": payload[0].LANDED_COST_MAX_DRAW default 0
    
}))[0]
 ]]></ee:set-payload>
			</ee:message>
										<ee:variables >
										</ee:variables>
		</ee:transform>
									<batch:aggregator doc:name="Batch Aggregator" doc:id="a806d24f-b8c6-4a00-9e54-4ce553f0fa5a" size="200">
										<ee:transform doc:name="Transform Message" doc:id="2a577704-6be3-402e-b7f0-02780ee1822b">
											<ee:message>
												<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload map read( $, 'application/json') distinctBy ((item, index) -> item)]]></ee:set-payload>
											</ee:message>
										</ee:transform>
										<choice doc:name="Choice" doc:id="abcdb722-ca86-4614-9c8a-96e48e6cf508" >
											<when expression='#[payload != null]'>
												<logger level="INFO" doc:name="Logger" doc:id="a8c6ecba-4953-4a38-8e47-32822284c731" message='#[%dw 2.0&#10;output application/json&#10;---&#10;"Starting Landed Cost Upsert for DRAW "]'/>
												<salesforce:upsert doc:name="Upsert" doc:id="073d3b2d-9324-4a38-bf28-2091531982e7" config-ref="Salesforce_Config" objectType="${sf.object}" externalIdFieldName="${sf.extId}" >
												</salesforce:upsert>
												<logger level="INFO" doc:name="Logger" doc:id="917a4821-8aa5-4e0f-8b3e-cad4bc43f7af" message='#[%dw 2.0&#10;output application/json&#10;---&#10;"Landed Cost upsereted successfully for : " ++ vars.metadata.drawExternalID[0] ++ " : " ++ payload.successful]' />
											</when>
											<otherwise >
												<logger level="INFO" doc:name="Logger" doc:id="ff2fe0b0-8459-4cde-afe8-496fe9e2ce62" message="Nothing to Update in this run"/>
											</otherwise>
										</choice>
									</batch:aggregator>
						</batch:step>
						<batch:step name="Handle-Batch-Errors" doc:id="548dbd5b-1c69-4e10-bddd-2489b59bff08" acceptPolicy="ONLY_FAILURES">
					<ee:transform doc:name="Transform Message" doc:id="bc8a16ee-cc98-4596-86bf-d3417b7e9540">
						<ee:message>
							<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
						</ee:message>
					</ee:transform>
					<batch:aggregator doc:name="Batch Aggregator" doc:id="65aa30bc-f856-4d02-8705-2da1ef3fae02" size="100">
						<ee:transform doc:name="Transform Message" doc:id="28c06d76-660e-40ed-8e78-fb8bd96e946e">
							<ee:message>
								<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload map read( $, 'application/json')]]></ee:set-payload>
							</ee:message>
						</ee:transform>
						<logger level="INFO" doc:name="Logger" doc:id="1c88cf02-5b3e-41ad-a024-ad3896aba703" message="#[payload]" />
						<email:send doc:name="Send" doc:id="22c119db-da3a-414c-89b2-ece7e66c974b" config-ref="NTN-SMTP-Details" subject="#[&quot;*** E-mail Notification: &quot; ++ p('app.env') ++ &quot;  *** Batch Process Error Handling in  &quot; ++ p('app.name')]" toAddresses="#[p('smtp.to') splitBy &quot;,&quot;]">
							<email:body contentType="text/html" encoding="UTF-8">
								<email:content><![CDATA[#[%dw 2.0
output application/xml
skipNullOn="everywhere"

---
{
    "html":{
        "body":{
            "div" @(class:"total"):{
                "div" @(class:"header"):{
                    "h2":"Alert from Mulesoft"
                },
                "div" @(class:"content"):{
                    "p": "Hi,",
                    "p": "Greetings!!!",
					"p": "Error while processing, please take corrective action."
                },

                "div":{
                    "table" @(width:'40%', border:'1', cellspacing:'0'): {
							"tr":{
                                "th": "InterfaceName",
                                "td": p('app.name')
                            },
                          "tr":{
                                "th": "Error Type",
                                "td":  "Batch Processing Error while updating Landed MIN and MAX BASE Parts"
                            },
                          "tr":{
                                "th": "Failed Payload",
                                "td": payload
                            }                        
				
                        }
                }
            }
        }
    }
}]]]></email:content>
							</email:body>
						</email:send>
										<logger level="INFO" doc:name="Logger" doc:id="5a7a22c9-0741-4559-9602-31e6b2d283e5" message="#[payload]" />
					</batch:aggregator>
				</batch:step>
					</batch:process-records>
							<batch:on-complete>
								<ee:transform doc:name="Transform Message" doc:id="e4326534-e681-45a2-9885-0fb680456a3c">
									<ee:message>
										<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
									</ee:message>
								</ee:transform>
								<logger level="INFO" doc:name="Logger" doc:id="d2ee1aa1-741e-43f4-814c-ab7cf5245802" message="#['\n'] Landed min-max Base part batch is completed ==&gt;  #[payload]" />
							</batch:on-complete>
				</batch:job>
					</route>
					<route>
						<batch:job jobName="industry-part-batch-job" doc:id="0a773dae-f720-426b-9956-d078bbe923a6" maxFailedRecords="-1">
					<batch:process-records>
						<batch:step name="industry-part-batch-step" doc:id="07aa14b3-02df-4af3-b8d8-d469670865d9" acceptExpression='#[vars.metadata.srtxExternalID != null  and vars.metadata.srtxExternalID !="" and vars.metadata.srtxExternalID != []  and vars.metadata.srtxExternalID != [""] ]'>
							<ee:transform doc:name="Transform Message" doc:id="b41912f6-6482-4298-9a50-1dac14b01991">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output text/plain
---
readUrl("classpath://queryScript/sqlScript-landed-imsrtx-$(p('mule.env')).dwl","text/plain")]]></ee:set-payload>

			</ee:message>
			<ee:variables>
			
</ee:variables>
		</ee:transform>
							<ee:dynamic-evaluate doc:name="Dynamic Evaluate" doc:id="04f185a5-2197-4225-88b6-2a6375f09da7" expression="#[payload]" />
							<db:select doc:name="Select" doc:id="68bc6a69-ca3f-4ba3-9031-2b397f53f79a" config-ref="Oracle_JDE_Database_Config">
										<reconnect />
										<db:sql><![CDATA[#[payload]]]></db:sql>
				</db:select>
							<ee:transform doc:name="Transform Message" doc:id="e93cfba9-0eae-4ae6-b1c9-e76d2a4db651">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
(vars.metadata.srtxExternalID map ((item, index) ->{       
	"External_ID__c":item,
    "Landed_Cost_Min__c": payload[0].Landed_Cost_Min_SRTX default 0,
    "Landed_Cost_Max__c": payload[0].Landed_Cost_Max_SRTX default 0
    
}))[0]]]></ee:set-payload>
			</ee:message>
		</ee:transform>
									<batch:aggregator doc:name="Batch Aggregator" doc:id="b815077b-7b4c-4e8a-82bd-e97544331cd5" size="200">
										<ee:transform doc:name="Transform Message" doc:id="a291e3c3-fa43-49b1-ad67-ca2572bcf20b">
											<ee:message>
												<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload map read( $, 'application/json') distinctBy ((item, index) -> item)]]></ee:set-payload>
											</ee:message>
										</ee:transform>
										<choice doc:name="Choice" doc:id="41ca8b2b-fce2-414a-8f5d-6c25effcf468" >
											<when expression='#[payload != null]'>
												<logger level="INFO" doc:name="Logger" doc:id="8b79cefe-1bfe-444c-9cff-8bd87a8a8da7" message='#[%dw 2.0&#10;output application/json&#10;---&#10;"Starting Landed Cost Upsert for SRTX "]'/>
												<salesforce:upsert doc:name="Upsert" doc:id="68694f18-4a38-4322-acf7-dc7ba9ebf053" config-ref="Salesforce_Config" objectType="${sf.object}" externalIdFieldName="${sf.extId}">
										</salesforce:upsert>
												<logger level="INFO" doc:name="Logger" doc:id="0dfe4e5e-54e2-4253-b061-7d6c35225b5a" message='#[%dw 2.0&#10;output application/json&#10;---&#10;"Landed Cost upsereted successfully for : " ++ vars.metadata.srtxExternalID[0] ++ " : " &#10;++ payload.successful]' />
											</when>
											<otherwise >
												<logger level="INFO" doc:name="Logger" doc:id="d5b3acba-ca9a-4652-a98e-efebf8460427" message="Nothing to Update in this run"/>
											</otherwise>
										</choice>
									</batch:aggregator>
						
						</batch:step>
						<batch:step name="Handle-Batch-Errors" doc:id="8b2c8373-19ee-41fb-bbff-fff504b8ca5c" acceptPolicy="ONLY_FAILURES">
					<ee:transform doc:name="Transform Message" doc:id="230b7676-84e3-4a95-9098-e39eefd2749d">
						<ee:message>
							<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
						</ee:message>
					</ee:transform>
					<batch:aggregator doc:name="Batch Aggregator" doc:id="347930d3-9397-415e-ad22-e84fb52565da" size="100">
						<ee:transform doc:name="Transform Message" doc:id="bc22967f-57ab-47aa-8b6b-add6654194ff">
							<ee:message>
								<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload map read( $, 'application/json')]]></ee:set-payload>
							</ee:message>
						</ee:transform>
						<logger level="INFO" doc:name="Logger" doc:id="a189153d-b0ed-4390-83f9-e801a9ce918f" message="#[payload]" />
						<email:send doc:name="Send" doc:id="f319f1c0-ffe5-4549-a42d-5126fd86f1c5" config-ref="NTN-SMTP-Details" subject="#[&quot;*** E-mail Notification: &quot; ++ p('app.env') ++ &quot;  *** Batch Process Error Handling in  &quot; ++ p('app.name')]" toAddresses="#[p('smtp.to') splitBy &quot;,&quot;]">
							<email:body contentType="text/html" encoding="UTF-8">
								<email:content><![CDATA[#[%dw 2.0
output application/xml
skipNullOn="everywhere"

---
{
    "html":{
        "body":{
            "div" @(class:"total"):{
                "div" @(class:"header"):{
                    "h2":"Alert from Mulesoft"
                },
                "div" @(class:"content"):{
                    "p": "Hi,",
                    "p": "Greetings!!!",
					"p": "Error while processing, please take corrective action."
                },

                "div":{
                    "table" @(width:'40%', border:'1', cellspacing:'0'): {
							"tr":{
                                "th": "InterfaceName",
                                "td": p('app.name')
                            },
                          "tr":{
                                "th": "Error Type",
                                "td":  "Batch Processing Error while updating Landed MIN and MAX INDUSTRY Parts"
                            },
                          "tr":{
                                "th": "Failed Payload",
                                "td": payload
                            }                        
				
                        }
                }
            }
        }
    }
}]]]></email:content>
							</email:body>
						</email:send>
										<logger level="INFO" doc:name="Logger" doc:id="5cc0fdaf-a5b9-4561-aa6a-3b7a4a0e9c60" message="#[payload]" />
					</batch:aggregator>
				</batch:step>
					</batch:process-records>
							<batch:on-complete>
								<ee:transform doc:name="Transform Message" doc:id="7c304c09-4845-464d-b47a-ea1dc62a7493">
									<ee:message>
										<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
payload]]></ee:set-payload>
									</ee:message>
								</ee:transform>
								<logger level="INFO" doc:name="Logger" doc:id="8fa3785c-bb1f-4734-85f6-4e61ff3b3483" message="#['\n'] Landed min-max Industry part batch is completed ==&gt;  #[payload]" />
							</batch:on-complete>
				</batch:job>
					</route>
				</scatter-gather>
			</when>
		
</choice>
	</sub-flow>
	<sub-flow name="get-pricebook-id" doc:id="cb29d81e-e1f4-415d-9e7a-01c8ee0d4050">
		<ee:transform doc:name="Transform Message" doc:id="48cb19e8-e866-445d-9f97-1195ef134e2c">
			<ee:message>
				<ee:set-payload resource="dwl/Execute-composite-request.dwl" />
			</ee:message>
		</ee:transform>
		<salesforce-composite:execute-composite-request doc:name="Execute composite request" doc:id="b60ebc3e-a090-4479-8338-7e1f71b84dae" config-ref="Salesforce_Composite_Config">
				<reconnect-forever />
			</salesforce-composite:execute-composite-request>
		<ee:transform doc:name="Transform Message" doc:id="452df09b-544b-4d60-a1fb-1f46715913a0">
			<ee:message>
				<ee:set-payload><![CDATA[%dw 2.0
output application/json
---
{id:(payload.compositeResponse map ($..body."records")[0]) map ((item, index) -> item[0].Id)}]]></ee:set-payload>
			</ee:message>
		</ee:transform>
		<logger level="INFO" doc:name="Logger" doc:id="afeca09e-29d9-48e5-a764-022550bd0802" message="The list of PriceBook IDs are : ++ #[payload]"/>
	</sub-flow>

</mule>